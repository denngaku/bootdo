<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.books.dao.BooksDao">

	<select id="get" resultType="com.bootdo.books.domain.BooksDO">
		select `id`,`bookname`,`author`,`category`,`introduction`,`update_time` from books where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.books.domain.BooksDO">
		select `id`,`bookname`,`author`,`category`,`introduction`,`update_time` from books
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="bookname != null and bookname != ''"> and bookname = #{bookname} </if>
		  		  <if test="author != null and author != ''"> and author = #{author} </if>
		  		  <if test="category != null and category != ''"> and category = #{category} </if>
		  		  <if test="introduction != null and introduction != ''"> and introduction = #{introduction} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from books
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="bookname != null and bookname != ''"> and bookname = #{bookname} </if>
		  		  <if test="author != null and author != ''"> and author = #{author} </if>
		  		  <if test="category != null and category != ''"> and category = #{category} </if>
		  		  <if test="introduction != null and introduction != ''"> and introduction = #{introduction} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.books.domain.BooksDO">
		insert into books
		(
			`id`, 
			`bookname`,
			`author`, 
			`category`, 
			`introduction`, 
			`update_time`
		)
		values
		(
			#{id},
			#{bookname},
			#{author}, 
			#{category}, 
			#{introduction}, 
			#{updateTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.books.domain.BooksDO">
		update books 
		<set>
			<if test="bookname != null">`bookname` = #{bookname}, </if>
			<if test="author != null">`author` = #{author}, </if>
			<if test="category != null">`category` = #{category}, </if>
			<if test="introduction != null">`introduction` = #{introduction}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from books where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from books where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>